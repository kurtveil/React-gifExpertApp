{"version":3,"sources":["Components/AddCategory.js","helpers/getGifts.js","Components/ItemGif.js","Components/GridGif.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","ItemGif","className","src","alt","GridGif","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,mCACI,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKd,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdxB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,e,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAEkEC,UAAUH,GAF5E,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAcZM,GAdY,4CAAH,sDCGPO,EAAU,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC7B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IAChB,4BAAIA,QCFPO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GAEpBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAId,IAEIC,EDd2BK,CAAa1B,GAAjCa,EADyB,EAC/BN,KAAca,EADiB,EACjBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEKH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA0BA,GAAZA,EAAIC,aEXjBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAMhC,OACE,qCACE,8CACE,cAAC,EAAD,CAAaA,cAAgBA,IAC/B,uBAGA,6BACG2C,EAAWnB,KAAI,SAACT,GAAD,OAAe,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCbzE6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c7d59185.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e)=> {\n        e.preventDefault();\n        if (inputValue.trim().length > 2){\n            setCategories(cats => [ inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n    return (\n        <>  \n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" value={inputValue} onChange={ handleInputChange}/>\n            </form>\n        </>\n    )\n}\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n    const url =\n      `https://api.giphy.com/v1/gifs/search?api_key=iUMZ04nzM58uqFfMMGCQzatzB4qPj97R&q=${encodeURI(category)}&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n      };\n    });\n\n    return gifs;\n  };","import React from 'react';\n\n\nexport const ItemGif = ({ title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n                <p>{title}</p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { ItemGif } from \"./ItemGif\";\n\n\nexport const GridGif = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n      <div className=\"card-grid\">\n        {/* <ol> */}\n          {images.map((img) => (\n            <ItemGif key={img.id} {...img} />\n          ))}\n        {/* </ol> */}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifts\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n    //   setTimeout(() => {\n        setstate({\n          data: imgs,\n          loading: false,\n        });\n    //   }, 3000);\n    });\n  }, []);\n\n  return state; // {data : [], loading: true}\n};\n","import React, {useState} from \"react\";\nimport { AddCategory } from \"./Components/AddCategory\";\nimport { GridGif } from \"./Components/GridGif\";\n\nexport const GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState([\"One Punch\"]);\n\n  \n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n        <AddCategory setCategories={ setCategories }/>\n      <hr />    \n\n\n      <ol>\n        {categories.map((category) =>  <GridGif category={category} key={category}/> )}\n      </ol>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}